From: Kyle Moffett <kyle@moffetthome.net>
Date: Sun, 12 Apr 2015 22:58:57 +0000
Subject: HACK: Try to use multiarch-compatible compiler settings

---
 tools/cpp/BUILD     |  25 ++----
 tools/cpp/CROSSTOOL | 215 +++++++++++++++-------------------------------------
 2 files changed, 65 insertions(+), 175 deletions(-)

diff --git a/tools/cpp/BUILD b/tools/cpp/BUILD
index f35d2bb..ef90f88 100644
--- a/tools/cpp/BUILD
+++ b/tools/cpp/BUILD
@@ -31,17 +31,16 @@ filegroup(
 filegroup(
     name = "toolchain",
     srcs = [
-        ":cc-compiler-darwin",
-        ":cc-compiler-local",
+        ":cc-compiler-x86_64-linux-gnu",
         ":empty",
     ],
 )
 
 cc_toolchain(
-    name = "cc-compiler-local",
+    name = "cc-compiler-x86_64-linux-gnu",
     all_files = ":empty",
     compiler_files = ":empty",
-    cpu = "local",
+    cpu = "x86_64-linux-gnu",
     dwp_files = ":empty",
     dynamic_runtime_libs = [":empty"],
     linker_files = ":empty",
@@ -52,24 +51,10 @@ cc_toolchain(
 )
 
 cc_toolchain(
-    name = "cc-compiler-k8",
+    name = "cc-compiler-powerpc-linux-gnu",
     all_files = ":empty",
     compiler_files = ":empty",
-    cpu = "local",
-    dwp_files = ":empty",
-    dynamic_runtime_libs = [":empty"],
-    linker_files = ":empty",
-    objcopy_files = ":empty",
-    static_runtime_libs = [":empty"],
-    strip_files = ":empty",
-    supports_param_files = 0,
-)
-
-cc_toolchain(
-    name = "cc-compiler-darwin",
-    all_files = ":empty",
-    compiler_files = ":empty",
-    cpu = "darwin",
+    cpu = "powerpc-linux-gnu",
     dwp_files = ":empty",
     dynamic_runtime_libs = [":empty"],
     linker_files = ":empty",
diff --git a/tools/cpp/CROSSTOOL b/tools/cpp/CROSSTOOL
index c449a63..a4b770e 100644
--- a/tools/cpp/CROSSTOOL
+++ b/tools/cpp/CROSSTOOL
@@ -2,20 +2,20 @@ major_version: "local"
 minor_version: ""
 default_target_cpu: "same_as_host"
 default_toolchain {
-  cpu: "k8"
-  toolchain_identifier: "local_linux"
+  cpu: "x86_64-linux-gnu"
+  toolchain_identifier: "debian_gcc-4.9_x86_64-linux-gnu"
 }
 default_toolchain {
-  cpu: "darwin"
-  toolchain_identifier: "local_darwin"
+  cpu: "powerpc-linux-gnu"
+  toolchain_identifier: "debian_gcc-4.9_powerpc-linux-gnu"
 }
 
 toolchain {
-  abi_version: "local"
-  abi_libc_version: "local"
+  abi_version: "UNUSED"
+  abi_libc_version: "UNUSED"
   builtin_sysroot: ""
   compiler: "compiler"
-  host_system_name: "local"
+  host_system_name: "debian"
   needsPic: true
   supports_gold_linker: false
   supports_incremental_linker: false
@@ -24,175 +24,80 @@ toolchain {
   supports_normalizing_ar: false
   supports_start_end_lib: false
   supports_thin_archives: false
-  target_libc: "local"
-  target_cpu: "local"
-  target_system_name: "local"
-  toolchain_identifier: "local_linux"
+  target_libc: "debian"
+  target_cpu: "x86_64-linux-gnu"
+  target_system_name: "debian"
+  toolchain_identifier: "debian_gcc-4.9_x86_64-linux-gnu"
 
-  tool_path { name: "ar" path: "/usr/bin/ar" }
-  tool_path { name: "compat-ld" path: "/usr/bin/ld" }
-  tool_path { name: "cpp" path: "/usr/bin/cpp" }
-  tool_path { name: "dwp" path: "/usr/bin/dwp" }
-  tool_path { name: "gcc" path: "/usr/bin/gcc" }
+  tool_path { name: "ar" path: "/usr/bin/x86_64-linux-gnu-ar" }
+  tool_path { name: "compat-ld" path: "/usr/bin/x86_64-linux-gnu-ld" }
+  tool_path { name: "cpp" path: "/usr/bin/x86_64-linux-gnu-cpp-4.9" }
+  tool_path { name: "dwp" path: "/usr/bin/x86_64-linux-gnu-dwp" }
+  tool_path { name: "gcc" path: "/usr/bin/x86_64-linux-gnu-gcc-4.9" }
   cxx_flag: "-std=c++0x"
   linker_flag: "-lstdc++"
   linker_flag: "-B/usr/bin/"
 
-  # TODO(bazel-team): In theory, the path here ought to exactly match the path
-  # used by gcc. That works because bazel currently doesn't track files at
-  # absolute locations and has no remote execution, yet. However, this will need
-  # to be fixed, maybe with auto-detection?
-  cxx_builtin_include_directory: "/usr/lib/gcc/"
+  cxx_builtin_include_directory: "/usr/include/c++/4.9"
+  cxx_builtin_include_directory: "/usr/include/x86_64-linux-gnu/c++/4.9"
+  cxx_builtin_include_directory: "/usr/include/c++/4.9/backward"
+  cxx_builtin_include_directory: "/usr/lib/gcc/x86_64-linux-gnu/4.9/include"
   cxx_builtin_include_directory: "/usr/local/include"
+  cxx_builtin_include_directory: "/usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed"
+  cxx_builtin_include_directory: "/usr/include/x86_64-linux-gnu"
   cxx_builtin_include_directory: "/usr/include"
-  tool_path { name: "gcov" path: "/usr/bin/gcov" }
-  tool_path { name: "ld" path: "/usr/bin/ld" }
-  tool_path { name: "nm" path: "/usr/bin/nm" }
-  tool_path { name: "objcopy" path: "/usr/bin/objcopy" }
+  tool_path { name: "gcov" path: "/usr/bin/x86_64-linux-gnu-gcov-4.9" }
+  tool_path { name: "ld" path: "/usr/bin/x86_64-linux-gnu-ld" }
+  tool_path { name: "nm" path: "/usr/bin/x86_64-linux-gnu-nm" }
+  tool_path { name: "objcopy" path: "/usr/bin/x86_64-linux-gnu-objcopy" }
   objcopy_embed_flag: "-I"
   objcopy_embed_flag: "binary"
-  tool_path { name: "objdump" path: "/usr/bin/objdump" }
-  tool_path { name: "strip" path: "/usr/bin/strip" }
+  tool_path { name: "objdump" path: "/usr/bin/x86_64-linux-gnu-objdump" }
+  tool_path { name: "strip" path: "/usr/bin/x86_64-linux-gnu-strip" }
 }
 
 toolchain {
-  abi_version: "local"
-  abi_libc_version: "local"
+  abi_version: "UNUSED"
+  abi_libc_version: "UNUSED"
   builtin_sysroot: ""
   compiler: "compiler"
-  host_system_name: "local"
+  host_system_name: "debian"
   needsPic: true
-  target_libc: "macosx"
-  target_cpu: "darwin"
-  target_system_name: "local"
-  toolchain_identifier: "local_darwin"
+  supports_gold_linker: false
+  supports_incremental_linker: false
+  supports_fission: false
+  supports_interface_shared_objects: false
+  supports_normalizing_ar: false
+  supports_start_end_lib: false
+  supports_thin_archives: false
+  target_libc: "debian"
+  target_cpu: "powerpc-linux-gnu"
+  target_system_name: "debian"
+  toolchain_identifier: "debian_gcc-4.9_powerpc-linux-gnu"
 
-  tool_path { name: "ar" path: "/usr/bin/libtool" }
-  tool_path { name: "compat-ld" path: "/usr/bin/ld" }
-  tool_path { name: "cpp" path: "/usr/bin/cpp" }
-  tool_path { name: "dwp" path: "/usr/bin/dwp" }
-  tool_path { name: "gcc" path: "osx_gcc_wrapper.sh" }
+  tool_path { name: "ar" path: "/usr/bin/powerpc-linux-gnu-ar" }
+  tool_path { name: "compat-ld" path: "/usr/bin/powerpc-linux-gnu-ld" }
+  tool_path { name: "cpp" path: "/usr/bin/powerpc-linux-gnu-cpp-4.9" }
+  tool_path { name: "dwp" path: "/usr/bin/powerpc-linux-gnu-dwp" }
+  tool_path { name: "gcc" path: "/usr/bin/powerpc-linux-gnu-gcc-4.9" }
   cxx_flag: "-std=c++0x"
-  ar_flag: "-static"
-  ar_flag: "-s"
-  ar_flag: "-o"
   linker_flag: "-lstdc++"
-  cxx_builtin_include_directory: "/usr/include"
-  cxx_builtin_include_directory: "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain"
-  cxx_builtin_include_directory: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
-  cxx_builtin_include_directory: "/opt/local/include"
-  cxx_builtin_include_directory: "/usr/local/include"
-  cxx_builtin_include_directory: "/Library/Developer/CommandLineTools"
-  cxx_builtin_include_directory: "/System/Library/Frameworks"
-  cxx_builtin_include_directory: "/Library/Frameworks"
-  tool_path { name: "gcov" path: "/usr/bin/gcov" }
-  tool_path { name: "ld" path: "/usr/bin/ld" }
-  tool_path { name: "nm" path: "/usr/bin/nm" }
-  tool_path { name: "objcopy" path: "/usr/bin/objcopy" }
-  objcopy_embed_flag: "-I"
-  objcopy_embed_flag: "binary"
-  tool_path { name: "objdump" path: "/usr/bin/objdump" }
-  tool_path { name: "strip" path: "/usr/bin/strip" }
-}
-
-toolchain {
-  abi_version: "local"
-  abi_libc_version: "local"
-  builtin_sysroot: ""
-  compiler: "windows_mingw"
-  host_system_name: "local"
-  needsPic: false
-  target_libc: "local"
-  target_cpu: "k8"
-  target_system_name: "local"
-  toolchain_identifier: "local_windows_mingw"
-
-  tool_path { name: "ar" path: "C:/mingw/bin/ar" }
-  tool_path { name: "compat-ld" path: "C:/mingw/bin/ld" }
-  tool_path { name: "cpp" path: "C:/mingw/bin/cpp" }
-  tool_path { name: "dwp" path: "C:/mingw/bin/dwp" }
-  tool_path { name: "gcc" path: "C:/mingw/bin/gcc" }
-  cxx_flag: "-std=c++0x"
-  # TODO(bazel-team): In theory, the path here ought to exactly match the path
-  # used by gcc. That works because bazel currently doesn't track files at
-  # absolute locations and has no remote execution, yet. However, this will need
-  # to be fixed, maybe with auto-detection?
-  cxx_builtin_include_directory: "C:/mingw/include"
-  cxx_builtin_include_directory: "C:/mingw/lib/gcc"
-  tool_path { name: "gcov" path: "C:/mingw/bin/gcov" }
-  tool_path { name: "ld" path: "C:/mingw/bin/ld" }
-  tool_path { name: "nm" path: "C:/mingw/bin/nm" }
-  tool_path { name: "objcopy" path: "C:/mingw/bin/objcopy" }
-  objcopy_embed_flag: "-I"
-  objcopy_embed_flag: "binary"
-  tool_path { name: "objdump" path: "C:/mingw/bin/objdump" }
-  tool_path { name: "strip" path: "C:/mingw/bin/strip" }
-}
-
-toolchain {
-  abi_version: "local"
-  abi_libc_version: "local"
-  builtin_sysroot: ""
-  compiler: "windows_msys64_mingw64"
-  host_system_name: "local"
-  needsPic: false
-  target_libc: "local"
-  target_cpu: "k8"
-  target_system_name: "local"
-  toolchain_identifier: "local_windows_msys64_mingw64"
-
-  tool_path { name: "ar" path: "C:/msys64/mingw64/bin/ar" }
-  tool_path { name: "compat-ld" path: "C:/msys64/mingw64/bin/ld" }
-  tool_path { name: "cpp" path: "C:/msys64/mingw64/bin/cpp" }
-  tool_path { name: "dwp" path: "C:/msys64/mingw64/bin/dwp" }
-  tool_path { name: "gcc" path: "C:/msys64/mingw64/bin/gcc" }
-  cxx_flag: "-std=c++0x"
-  # TODO(bazel-team): In theory, the path here ought to exactly match the path
-  # used by gcc. That works because bazel currently doesn't track files at
-  # absolute locations and has no remote execution, yet. However, this will need
-  # to be fixed, maybe with auto-detection?
-  cxx_builtin_include_directory: "C:/msys64/mingw64/x86_64-w64-mingw32/include"
-  tool_path { name: "gcov" path: "C:/msys64/mingw64/bin/gcov" }
-  tool_path { name: "ld" path: "C:/msys64/mingw64/bin/ld" }
-  tool_path { name: "nm" path: "C:/msys64/mingw64/bin/nm" }
-  tool_path { name: "objcopy" path: "C:/msys64/mingw64/bin/objcopy" }
-  objcopy_embed_flag: "-I"
-  objcopy_embed_flag: "binary"
-  tool_path { name: "objdump" path: "C:/msys64/mingw64/bin/objdump" }
-  tool_path { name: "strip" path: "C:/msys64/mingw64/bin/strip" }
-}
-
-toolchain {
-  abi_version: "local"
-  abi_libc_version: "local"
-  builtin_sysroot: ""
-  compiler: "windows_clang"
-  host_system_name: "local"
-  needsPic: false
-  target_libc: "local"
-  target_cpu: "k8"
-  target_system_name: "local"
-  toolchain_identifier: "local_windows_clang"
+  linker_flag: "-B/usr/bin/"
 
-  tool_path { name: "ar" path: "C:/mingw/bin/ar" }
-  tool_path { name: "compat-ld" path: "C:/Program Files (x86)/LLVM/bin/ld" }
-  tool_path { name: "cpp" path: "C:/Program Files (x86)/LLVM/bin/cpp" }
-  tool_path { name: "dwp" path: "C:/Program Files (x86)/LLVM/bin/dwp" }
-  tool_path { name: "gcc" path: "C:/Program Files (x86)/LLVM/bin/clang" }
-  cxx_flag: "-std=c++0x"
-  # TODO(bazel-team): In theory, the path here ought to exactly match the path
-  # used by gcc. That works because bazel currently doesn't track files at
-  # absolute locations and has no remote execution, yet. However, this will need
-  # to be fixed, maybe with auto-detection?
-  cxx_builtin_include_directory: "/usr/lib/gcc/"
+  cxx_builtin_include_directory: "/usr/include/c++/4.9"
+  cxx_builtin_include_directory: "/usr/include/powerpc-linux-gnu/c++/4.9"
+  cxx_builtin_include_directory: "/usr/include/c++/4.9/backward"
+  cxx_builtin_include_directory: "/usr/lib/gcc/powerpc-linux-gnu/4.9/include"
   cxx_builtin_include_directory: "/usr/local/include"
+  cxx_builtin_include_directory: "/usr/lib/gcc/powerpc-linux-gnu/4.9/include-fixed"
+  cxx_builtin_include_directory: "/usr/include/powerpc-linux-gnu"
   cxx_builtin_include_directory: "/usr/include"
-  tool_path { name: "gcov" path: "C:/Program Files (x86)/LLVM/bin/gcov" }
-  tool_path { name: "ld" path: "C:/Program Files (x86)/LLVM/bin/ld" }
-  tool_path { name: "nm" path: "C:/Program Files (x86)/LLVM/bin/nm" }
-  tool_path { name: "objcopy" path: "C:/Program Files (x86)/LLVM/bin/objcopy" }
+  tool_path { name: "gcov" path: "/usr/bin/powerpc-linux-gnu-gcov-4.9" }
+  tool_path { name: "ld" path: "/usr/bin/powerpc-linux-gnu-ld" }
+  tool_path { name: "nm" path: "/usr/bin/powerpc-linux-gnu-nm" }
+  tool_path { name: "objcopy" path: "/usr/bin/powerpc-linux-gnu-objcopy" }
   objcopy_embed_flag: "-I"
   objcopy_embed_flag: "binary"
-  tool_path { name: "objdump" path: "C:/Program Files (x86)/LLVM/bin/objdump" }
-  tool_path { name: "strip" path: "C:/Program Files (x86)/LLVM/bin/strip" }
+  tool_path { name: "objdump" path: "/usr/bin/powerpc-linux-gnu-objdump" }
+  tool_path { name: "strip" path: "/usr/bin/powerpc-linux-gnu-strip" }
 }
